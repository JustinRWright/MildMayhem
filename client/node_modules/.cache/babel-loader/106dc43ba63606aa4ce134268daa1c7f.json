{"ast":null,"code":"import _classCallCheck from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import Phaser from'phaser';var CoolDown=/*#__PURE__*/function(_Phaser$Physics$Arcad){_inherits(CoolDown,_Phaser$Physics$Arcad);var _super=_createSuper(CoolDown);function CoolDown(scene,x,y,texture,coolDownMS){var _this;_classCallCheck(this,CoolDown);_this=_super.call(this,scene,x,y,texture);//Adds sprite to screen\nscene.add.existing(_assertThisInitialized(_this));_this.setScale(.5);_this.active=false;//Duration of cooldown\n_this.coolDownMS=coolDownMS;_this.x=x;_this.y=y;_this.scene=scene;return _this;}_createClass(CoolDown,[{key:\"startCoolDown\",value:function startCoolDown(){this.active=true;//Change opacity\nthis.setAlpha(.5);console.log('scene is: '+this.scene);if(this.scene){var timedEvent=this.scene.time.delayedCall(this.coolDownMS,this.onEvent,[],this);}//let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\n}},{key:\"isActive\",value:function isActive(){return this.active;}},{key:\"onEvent\",value:function onEvent(){this.setAlpha(1);this.active=false;}}]);return CoolDown;}(Phaser.Physics.Arcade.Sprite);export{CoolDown as default};","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/src/phaser/sprites/CoolDown.js"],"names":["Phaser","CoolDown","scene","x","y","texture","coolDownMS","add","existing","setScale","active","setAlpha","console","log","timedEvent","time","delayedCall","onEvent","Physics","Arcade","Sprite"],"mappings":"4rBAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,C,GACqBC,CAAAA,Q,0HAGb,kBAAaC,KAAb,CAAmBC,CAAnB,CAAqBC,CAArB,CAAuBC,OAAvB,CAA+BC,UAA/B,CACA,0CACI,uBAAMJ,KAAN,CAAYC,CAAZ,CAAcC,CAAd,CAAgBC,OAAhB,EAEA;AACAH,KAAK,CAACK,GAAN,CAAUC,QAAV,gCACA,MAAKC,QAAL,CAAc,EAAd,EACA,MAAKC,MAAL,CAAc,KAAd,CACA;AACA,MAAKJ,UAAL,CAAkBA,UAAlB,CACA,MAAKH,CAAL,CAASA,CAAT,CACA,MAAKC,CAAL,CAASA,CAAT,CACA,MAAKF,KAAL,CAAaA,KAAb,CAXJ,aAcC,C,0EACc,CACX,KAAKQ,MAAL,CAAc,IAAd,CACA;AACA,KAAKC,QAAL,CAAc,EAAd,EACAC,OAAO,CAACC,GAAR,CAAY,aAAe,KAAKX,KAAhC,EACA,GAAG,KAAKA,KAAR,CAAc,CACV,GAAIY,CAAAA,UAAU,CAAG,KAAKZ,KAAL,CAAWa,IAAX,CAAgBC,WAAhB,CAA4B,KAAKV,UAAjC,CAA6C,KAAKW,OAAlD,CAA2D,EAA3D,CAA+D,IAA/D,CAAjB,CACH,CACD;AACH,C,2CAED,CACI,MAAO,MAAKP,MAAZ,CACH,C,yCACQ,CACL,KAAKC,QAAL,CAAc,CAAd,EACA,KAAKD,MAAL,CAAc,KAAd,CACH,C,sBApC6BV,MAAM,CAACkB,OAAP,CAAeC,MAAf,CAAsBC,M,SAAvCnB,Q","sourcesContent":["import Phaser from 'phaser';\r\nexport default class CoolDown extends Phaser.Physics.Arcade.Sprite\r\n    {\r\n\r\n        constructor (scene,x,y,texture,coolDownMS)\r\n        {\r\n            super(scene,x,y,texture);\r\n            \r\n            //Adds sprite to screen\r\n            scene.add.existing(this);\r\n            this.setScale(.5);\r\n            this.active = false;\r\n            //Duration of cooldown\r\n            this.coolDownMS = coolDownMS;\r\n            this.x = x;\r\n            this.y = y;\r\n            this.scene = scene;\r\n            \r\n            \r\n        }\r\n        startCoolDown(){\r\n            this.active = true;\r\n            //Change opacity\r\n            this.setAlpha(.5);\r\n            console.log('scene is: ' + this.scene);\r\n            if(this.scene){\r\n                let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\r\n            }\r\n            //let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\r\n        }\r\n        isActive()\r\n        {\r\n            return this.active;\r\n        }\r\n        onEvent(){\r\n            this.setAlpha(1);\r\n            this.active = false;\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}