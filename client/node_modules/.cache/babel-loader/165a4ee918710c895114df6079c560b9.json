{"ast":null,"code":"import Phaser from 'phaser';\nexport default class HealthBar extends Phaser.GameObjects.Sprite {\n  //This is from the Phaser3 healthbar example,\n  //https://phaser.io/examples/v3/view/game-objects/graphics/health-bars-demo\n  // with a few tweaks it seems to work great for this game\n  constructor(config) {\n    super(config.scene, config.x, config.y);\n    config.scene.add.existing(this);\n    var scene = config.scene;\n    var x = config.x;\n    var y = config.y;\n    this.bar = new Phaser.GameObjects.Graphics(scene);\n    this.x = x;\n    this.y = y;\n    this.value = 100; //What is this.p?\n\n    this.p = 76 / 100;\n    this.draw();\n    scene.add.existing(this.bar);\n  }\n\n  decrease(amount) {\n    this.value -= amount * 10;\n\n    if (this.value < 0) {\n      this.value = 0;\n    }\n\n    this.draw();\n    return this.value === 0;\n  }\n\n  draw() {\n    this.bar.clear(); //  BG\n\n    this.bar.fillStyle(0x000000);\n    this.bar.fillRect(this.x, this.y, 800, 16); //  Health\n\n    this.bar.fillStyle(0xffffff);\n    this.bar.fillRect(this.x + 2, this.y + 2, 792, 12);\n\n    if (this.value < 30) {\n      this.bar.fillStyle(0xff0000);\n    } else {\n      this.bar.fillStyle(0x00ff00);\n    }\n\n    var d = Math.floor(this.p * this.value);\n    this.bar.fillRect(this.x + 2, this.y + 2, d * 10, 12);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/src/phaser/sprites/HealthBar.js"],"names":["Phaser","HealthBar","GameObjects","Sprite","constructor","config","scene","x","y","add","existing","bar","Graphics","value","p","draw","decrease","amount","clear","fillStyle","fillRect","d","Math","floor"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,eAAe,MAAMC,SAAN,SAAwBD,MAAM,CAACE,WAAP,CAAmBC,MAA3C,CACd;AACG;AACA;AACA;AACAC,EAAAA,WAAW,CAAEC,MAAF,EACX;AACI,UAAMA,MAAM,CAACC,KAAb,EAAmBD,MAAM,CAACE,CAA1B,EAA4BF,MAAM,CAACG,CAAnC;AACAH,IAAAA,MAAM,CAACC,KAAP,CAAaG,GAAb,CAAiBC,QAAjB,CAA0B,IAA1B;AACA,QAAIJ,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,QAAIC,CAAC,GAAGF,MAAM,CAACE,CAAf;AACA,QAAIC,CAAC,GAAGH,MAAM,CAACG,CAAf;AACA,SAAKG,GAAL,GAAW,IAAIX,MAAM,CAACE,WAAP,CAAmBU,QAAvB,CAAgCN,KAAhC,CAAX;AAEA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKK,KAAL,GAAa,GAAb,CAVJ,CAWI;;AACA,SAAKC,CAAL,GAAS,KAAK,GAAd;AAEA,SAAKC,IAAL;AAEAT,IAAAA,KAAK,CAACG,GAAN,CAAUC,QAAV,CAAmB,KAAKC,GAAxB;AACH;;AAEDK,EAAAA,QAAQ,CAAEC,MAAF,EACR;AACI,SAAKJ,KAAL,IAAcI,MAAM,GAAC,EAArB;;AAEA,QAAI,KAAKJ,KAAL,GAAa,CAAjB,EACA;AACI,WAAKA,KAAL,GAAa,CAAb;AACH;;AAED,SAAKE,IAAL;AAEA,WAAQ,KAAKF,KAAL,KAAe,CAAvB;AACH;;AAEDE,EAAAA,IAAI,GACJ;AACI,SAAKJ,GAAL,CAASO,KAAT,GADJ,CAGI;;AACA,SAAKP,GAAL,CAASQ,SAAT,CAAmB,QAAnB;AACA,SAAKR,GAAL,CAASS,QAAT,CAAkB,KAAKb,CAAvB,EAA0B,KAAKC,CAA/B,EAAkC,GAAlC,EAAuC,EAAvC,EALJ,CAOI;;AAEA,SAAKG,GAAL,CAASQ,SAAT,CAAmB,QAAnB;AACA,SAAKR,GAAL,CAASS,QAAT,CAAkB,KAAKb,CAAL,GAAS,CAA3B,EAA8B,KAAKC,CAAL,GAAS,CAAvC,EAA0C,GAA1C,EAA+C,EAA/C;;AAEA,QAAI,KAAKK,KAAL,GAAa,EAAjB,EACA;AACI,WAAKF,GAAL,CAASQ,SAAT,CAAmB,QAAnB;AACH,KAHD,MAKA;AACI,WAAKR,GAAL,CAASQ,SAAT,CAAmB,QAAnB;AACH;;AAED,QAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKT,CAAL,GAAS,KAAKD,KAAzB,CAAR;AAEA,SAAKF,GAAL,CAASS,QAAT,CAAkB,KAAKb,CAAL,GAAS,CAA3B,EAA8B,KAAKC,CAAL,GAAS,CAAvC,EAA0Ca,CAAC,GAAC,EAA5C,EAAgD,EAAhD;AACH;;AA/DJ","sourcesContent":["import Phaser from 'phaser';\r\nexport default class HealthBar extends Phaser.GameObjects.Sprite\r\n {\r\n    //This is from the Phaser3 healthbar example,\r\n    //https://phaser.io/examples/v3/view/game-objects/graphics/health-bars-demo\r\n    // with a few tweaks it seems to work great for this game\r\n    constructor (config)\r\n    {\r\n        super(config.scene,config.x,config.y);\r\n        config.scene.add.existing(this);\r\n        var scene = config.scene;\r\n        var x = config.x;\r\n        var y = config.y;\r\n        this.bar = new Phaser.GameObjects.Graphics(scene);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.value = 100;\r\n        //What is this.p?\r\n        this.p = 76 / 100;\r\n\r\n        this.draw();\r\n\r\n        scene.add.existing(this.bar);\r\n    }\r\n\r\n    decrease (amount)\r\n    {\r\n        this.value -= amount*10;\r\n\r\n        if (this.value < 0)\r\n        {\r\n            this.value = 0;\r\n        }\r\n\r\n        this.draw();\r\n\r\n        return (this.value === 0);\r\n    }\r\n\r\n    draw ()\r\n    {\r\n        this.bar.clear();\r\n\r\n        //  BG\r\n        this.bar.fillStyle(0x000000);\r\n        this.bar.fillRect(this.x, this.y, 800, 16);\r\n\r\n        //  Health\r\n\r\n        this.bar.fillStyle(0xffffff);\r\n        this.bar.fillRect(this.x + 2, this.y + 2, 792, 12);\r\n\r\n        if (this.value < 30)\r\n        {\r\n            this.bar.fillStyle(0xff0000);\r\n        }\r\n        else\r\n        {\r\n            this.bar.fillStyle(0x00ff00);\r\n        }\r\n\r\n        var d = Math.floor(this.p * this.value);\r\n\r\n        this.bar.fillRect(this.x + 2, this.y + 2, d*10, 12);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}