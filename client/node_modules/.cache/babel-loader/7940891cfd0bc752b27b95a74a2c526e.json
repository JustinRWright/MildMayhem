{"ast":null,"code":"import _classCallCheck from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import ReactDOM from'react-dom';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import MatchRoomBox from'../components/MatchRoomBox.js';import InfoMenuBox from'../components/InfoMenuBox.js';import LocalGameImage from'../images/GameShot5.png';import OnlineGameImage from'../images/OnlineGame.png';import{Link}from'react-router-dom';import{subscribeToShowRooms,socket,getRooms,joinRoom}from'../api';var MenuPage=/*#__PURE__*/function(_React$Component){_inherits(MenuPage,_React$Component);var _super=_createSuper(MenuPage);function MenuPage(props){var _this;_classCallCheck(this,MenuPage);_this=_super.call(this,props);_this.setRoomState=function(newRooms){_this.setState({rooms:newRooms});};_this.controlConfigSelected=function(controlConfig){if(controlConfig===\"keyboard1\"){_this.setState({controls:{player1:{Movement:'WASD',SwordSlash:'SPACE',MagicBlast:'P'},player2:_this.state.controls.player2}});}else if(controlConfig===\"keyboard2\"){_this.setState({controls:{player1:_this.state.controls.player1,player2:{Movement:'ArrowKeys',SwordSlash:'NumPad0',MagicBlast:'NumPad9'}}});}else if(controlConfig===\"gamepad1\"){_this.setState({controls:{player1:{Movement:'GamePad',SwordSlash:'',MagicBlast:''},player2:_this.state.controls.player2}});}else if(controlConfig===\"gamepad2\"){_this.setState({controls:{player1:_this.state.controls.player1,player2:{Movement:'GamePad',SwordSlash:'',MagicBlast:''}}});}};_this.matchRoomClicked=function(gameType,roomName,playerId){if(gameType==='joinOnline'){joinRoom(playerId);}_this.props.passGameConfig(gameType,roomName);_this.props.passControlConfig(_this.state.controls);};console.log('menupage constructor called');_this.state={rooms:{},controls:{player1:{Movement:'WASD',SwordSlash:'SPACE',MagicBlast:'P'},player2:{Movement:'ArrowKeys',SwordSlash:'NumPad0',MagicBlast:'NumPad9'}}};return _this;}_createClass(MenuPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//Remove event listeners in case user pressed back from online game\nconsole.log('component mounted');//Whenever the rooms on the server are updated, the room state is set again\nsubscribeToShowRooms(function(err,room){var newRooms=room;_this2.setRoomState(newRooms);});getRooms(function(err,room){console.log('room is: '+JSON.stringify(room));var newRooms=room;_this2.setRoomState(newRooms);});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){console.log('componentUnmounted');socket.removeAllListeners();}},{key:\"render\",value:function render(){var _this3=this;var roomCount=this.state.rooms;//console.log('roomCount is: ' + JSON.stringify(roomCount));\nvar joinMatchBox;//I set the resolution to 800*600, which is the size of an old school NewGrounds web game. It is currently not responsive\n//This could be changed for a mobile depoloyment or something\nreturn/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#031316',borderRadius:15,maxWidth:800,minWidth:800,minHeight:600,maxHeight:600,margin:'auto'},children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',borderRadius:15,backgroundColor:'black',fontSize:30,fontFamily:'Audiowide',padding:20,border:'4px solid #1f39bd'},children:/*#__PURE__*/_jsx(\"div\",{style:{color:'#39FF14'},children:/*#__PURE__*/_jsx(\"u\",{children:\"Mild Mayhem\"})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(InfoMenuBox,{setControlConfig:this.controlConfigSelected})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(\"div\",{style:{paddingTop:40,paddingBottom:30},children:/*#__PURE__*/_jsx(Link,{to:\"/game\",style:{color:'black'},children:/*#__PURE__*/_jsx(MatchRoomBox,{onClick:function onClick(){return _this3.matchRoomClicked('createOnline');},image:OnlineGameImage,matchType:'Start Online Room'})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(\"div\",{style:{paddingTop:40,paddingBottom:30},children:/*#__PURE__*/_jsx(Link,{to:\"/game\",style:{color:'black'},children:/*#__PURE__*/_jsx(MatchRoomBox,{onClick:function onClick(){return _this3.matchRoomClicked('offline');},image:LocalGameImage,matchType:'Start Local Room'})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:10,children:[/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',paddingTop:15,font:25,color:'#39FF14'},children:/*#__PURE__*/_jsx(\"b\",{children:\"Available Online Matches\"})}),/*#__PURE__*/_jsx(\"div\",{style:{borderRadius:15,backgroundColor:'#9A9A9A',align:'left',textAlign:'left',minHeight:200,maxHeight:200,border:'1px solid'},children:/*#__PURE__*/_jsx(Grid,{container:true,children:Object.keys(roomCount).map(function(room,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Link,{to:\"/game\",style:{color:'black'},children:/*#__PURE__*/_jsx(MatchRoomBox,{onClick:function onClick(){return _this3.matchRoomClicked('joinOnline',roomCount[room].name,roomCount[room].id);},image:LocalGameImage,matchType:roomCount[room].name},roomCount[room].id)})});})})})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1})]})});}}]);return MenuPage;}(React.Component);export default MenuPage;","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/src/pages/MenuPage.js"],"names":["React","ReactDOM","Grid","Button","MatchRoomBox","InfoMenuBox","LocalGameImage","OnlineGameImage","Link","subscribeToShowRooms","socket","getRooms","joinRoom","MenuPage","props","setRoomState","newRooms","setState","rooms","controlConfigSelected","controlConfig","controls","player1","Movement","SwordSlash","MagicBlast","player2","state","matchRoomClicked","gameType","roomName","playerId","passGameConfig","passControlConfig","console","log","err","room","JSON","stringify","removeAllListeners","roomCount","joinMatchBox","backgroundColor","borderRadius","maxWidth","minWidth","minHeight","maxHeight","margin","textAlign","fontSize","fontFamily","padding","border","color","paddingTop","paddingBottom","font","align","Object","keys","map","index","name","id","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport MatchRoomBox from '../components/MatchRoomBox.js';\r\nimport InfoMenuBox from '../components/InfoMenuBox.js';\r\nimport LocalGameImage from '../images/GameShot5.png';\r\nimport OnlineGameImage from '../images/OnlineGame.png';\r\nimport { Link } from 'react-router-dom';\r\nimport {subscribeToShowRooms, socket, getRooms, joinRoom} from '../api';\r\nclass MenuPage extends React.Component {\r\n  constructor(props) {\r\n            super(props);\r\n            console.log('menupage constructor called');\r\n           \r\n            \r\n            this.state = {\r\n                rooms: {},\r\n                controls: {\r\n                player1: {\r\n                    Movement: 'WASD',\r\n                    SwordSlash: 'SPACE',\r\n                    MagicBlast: 'P'\r\n                },\r\n                player2: {\r\n                    Movement: 'ArrowKeys',\r\n                    SwordSlash: 'NumPad0',\r\n                    MagicBlast: 'NumPad9'\r\n                }\r\n            }};\r\n        };\r\ncomponentDidMount(){\r\n    //Remove event listeners in case user pressed back from online game\r\n    console.log('component mounted');\r\n    \r\n    //Whenever the rooms on the server are updated, the room state is set again\r\n    subscribeToShowRooms((err, room) => {\r\n        let newRooms = room;\r\n        this.setRoomState(newRooms);\r\n    });\r\n    getRooms((err, room) => {\r\n        console.log('room is: ' + JSON.stringify(room));\r\n        let newRooms = room;\r\n        this.setRoomState(newRooms);\r\n    });\r\n    \r\n   \r\n}\r\ncomponentWillUnmount() {\r\n    console.log('componentUnmounted');\r\n    socket.removeAllListeners()\r\n}\r\nsetRoomState = (newRooms) => {\r\n    this.setState({rooms: newRooms});\r\n}\r\n/*Function passed into the infoMenuBox, Sets the control config object which then gets passed up to App.js and then down into the GamePage component and the phaser game \r\nPerhaps custom controls here can detect keycodes and translate directly into a keycode value that gets passed into phaser\r\nFor example, an option to click on swordslash and press a key to get the key code(ex: SPACE), then send that to the phaser game where it will\r\nbe set as the attack.*/\r\n  controlConfigSelected = (controlConfig) => {\r\n      if (controlConfig === \"keyboard1\"){\r\n          this.setState({controls: {\r\n              player1: {\r\n                Movement: 'WASD',\r\n                SwordSlash: 'SPACE',\r\n                MagicBlast: 'P'\r\n              },\r\n              player2: this.state.controls.player2\r\n\r\n          }});\r\n      }\r\n      else if (controlConfig === \"keyboard2\"){\r\n          this.setState({controls: {\r\n              player1: this.state.controls.player1,\r\n              player2: {\r\n                Movement: 'ArrowKeys',\r\n                SwordSlash: 'NumPad0',\r\n                MagicBlast: 'NumPad9'\r\n              },\r\n\r\n          }});\r\n      }\r\n      else if (controlConfig === \"gamepad1\"){\r\n          this.setState({controls: {\r\n              player1: {\r\n                Movement: 'GamePad',\r\n                SwordSlash: '',\r\n                MagicBlast: ''\r\n              },\r\n              player2: this.state.controls.player2\r\n\r\n          }});\r\n      }\r\n      else if (controlConfig === \"gamepad2\"){\r\n          this.setState({controls: {\r\n              player1: this.state.controls.player1,\r\n              player2: {\r\n                Movement: 'GamePad',\r\n                SwordSlash: '',\r\n                MagicBlast: ''\r\n              },\r\n\r\n          }});\r\n      }\r\n  };\r\n  //When a match room is clicked, the control config is passed to the game for the game start\r\n  matchRoomClicked = (gameType,roomName,playerId) => {\r\n      if(gameType === 'joinOnline'){\r\n        joinRoom(playerId);\r\n      }\r\n      \r\n      this.props.passGameConfig(gameType,roomName);\r\n      this.props.passControlConfig(this.state.controls);\r\n  };\r\n  render() {\r\n    let roomCount = this.state.rooms;\r\n    //console.log('roomCount is: ' + JSON.stringify(roomCount));\r\n    let joinMatchBox;\r\n    \r\n    //I set the resolution to 800*600, which is the size of an old school NewGrounds web game. It is currently not responsive\r\n    //This could be changed for a mobile depoloyment or something\r\n    return <div style={{backgroundColor: '#031316', borderRadius: 15, maxWidth: 800, minWidth:800, minHeight:600, maxHeight:600, margin: 'auto'}}>\r\n    <Grid container>\r\n        {/*Title Bar*/}\r\n        <Grid item xs={12}>\r\n            <div style={{textAlign: 'center', borderRadius: 15, backgroundColor: 'black', fontSize: 30, fontFamily: 'Audiowide', padding: 20, border: '4px solid #1f39bd'}}>\r\n                <div style={{color: '#39FF14'}}>\r\n                    <u>\r\n                        Mild Mayhem\r\n                    </u>\r\n                </div>\r\n            \r\n            </div>\r\n        </Grid>\r\n        {/*Interactive information box*/}\r\n        <Grid item xs={4}>\r\n            <InfoMenuBox setControlConfig={this.controlConfigSelected}></InfoMenuBox>\r\n        </Grid>\r\n\r\n        {/*Online match box*/}\r\n        <Grid item xs = {4}>\r\n            <div style={{paddingTop: 40, paddingBottom: 30}}>\r\n                <Link to='/game' style={{color: 'black'}}>\r\n                    <MatchRoomBox onClick={() => this.matchRoomClicked('createOnline')} image={OnlineGameImage} matchType={'Start Online Room'}></MatchRoomBox>\r\n                </Link>\r\n            </div>\r\n        </Grid>\r\n\r\n        {/*Offline match box*/}\r\n        <Grid item xs = {4}>\r\n            <div style={{paddingTop: 40, paddingBottom: 30}}> \r\n                {/*route to game*/}\r\n                <Link to='/game' style={{color: 'black'}}>\r\n                    <MatchRoomBox onClick={() => this.matchRoomClicked('offline')} image={LocalGameImage} matchType={'Start Local Room'}></MatchRoomBox>\r\n                </Link>\r\n            </div>\r\n        </Grid>\r\n\r\n        {/*List of available online rooms*/}\r\n        <Grid item xs = {1}>\r\n        </Grid>\r\n\r\n        <Grid item xs = {10}>\r\n        \r\n                <div style={{ textAlign: 'center', paddingTop: 15, font: 25, color: '#39FF14'}}>\r\n                <b>Available Online Matches</b>\r\n                </div>\r\n                <div style={{ borderRadius: 15, backgroundColor: '#9A9A9A', align: 'left', textAlign: 'left', minHeight:200, maxHeight:200, border: '1px solid'}}>\r\n                <Grid container>\r\n                {\r\n                    \r\n                    Object.keys(roomCount).map((room, index) => (\r\n                        <Grid item xs = {4}>\r\n                            <Link to='/game' style={{color: 'black'}}>\r\n                                <MatchRoomBox key={roomCount[room].id} onClick={() => this.matchRoomClicked('joinOnline', roomCount[room].name, roomCount[room].id)} image={LocalGameImage} matchType={roomCount[room].name}></MatchRoomBox>\r\n                            </Link>\r\n                        </Grid>\r\n                    ))\r\n\r\n                      \r\n                }\r\n                </Grid>\r\n                \r\n                </div>\r\n        </Grid>\r\n\r\n        <Grid item xs = {1}>\r\n        </Grid>\r\n    </Grid>\r\n   \r\n  </div>\r\n}\r\n}\r\n\r\nexport default MenuPage;"]},"metadata":{},"sourceType":"module"}