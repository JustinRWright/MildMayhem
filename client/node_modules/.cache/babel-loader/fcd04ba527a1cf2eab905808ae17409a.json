{"ast":null,"code":"import Phaser from 'phaser';\nexport default class CoolDown extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y, texture, coolDownMS) {\n    super(scene, x, y, texture); //Adds sprite to screen\n\n    scene.add.existing(this);\n    this.setScale(.5);\n    this.active = false; //Duration of cooldown\n\n    this.coolDownMS = coolDownMS;\n    this.x = x;\n    this.y = y;\n    this.scene = scene;\n  }\n\n  startCoolDown() {\n    this.active = true; //Change opacity\n\n    this.setAlpha(.5);\n    console.log('scene is: ' + this.scene);\n\n    if (this.scene) {\n      let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\n    } //let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\n\n  }\n\n  isActive() {\n    return this.active;\n  }\n\n  onEvent() {\n    this.setAlpha(1);\n    this.active = false;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/src/phaser/sprites/CoolDown.js"],"names":["Phaser","CoolDown","Physics","Arcade","Sprite","constructor","scene","x","y","texture","coolDownMS","add","existing","setScale","active","startCoolDown","setAlpha","console","log","timedEvent","time","delayedCall","onEvent","isActive"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,eAAe,MAAMC,QAAN,SAAuBD,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,MAA7C,CACX;AAEIC,EAAAA,WAAW,CAAEC,KAAF,EAAQC,CAAR,EAAUC,CAAV,EAAYC,OAAZ,EAAoBC,UAApB,EACX;AACI,UAAMJ,KAAN,EAAYC,CAAZ,EAAcC,CAAd,EAAgBC,OAAhB,EADJ,CAGI;;AACAH,IAAAA,KAAK,CAACK,GAAN,CAAUC,QAAV,CAAmB,IAAnB;AACA,SAAKC,QAAL,CAAc,EAAd;AACA,SAAKC,MAAL,GAAc,KAAd,CANJ,CAOI;;AACA,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKF,KAAL,GAAaA,KAAb;AAGH;;AACDS,EAAAA,aAAa,GAAE;AACX,SAAKD,MAAL,GAAc,IAAd,CADW,CAEX;;AACA,SAAKE,QAAL,CAAc,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,KAAKZ,KAAhC;;AACA,QAAG,KAAKA,KAAR,EAAc;AACV,UAAIa,UAAU,GAAG,KAAKb,KAAL,CAAWc,IAAX,CAAgBC,WAAhB,CAA4B,KAAKX,UAAjC,EAA6C,KAAKY,OAAlD,EAA2D,EAA3D,EAA+D,IAA/D,CAAjB;AACH,KAPU,CAQX;;AACH;;AACDC,EAAAA,QAAQ,GACR;AACI,WAAO,KAAKT,MAAZ;AACH;;AACDQ,EAAAA,OAAO,GAAE;AACL,SAAKN,QAAL,CAAc,CAAd;AACA,SAAKF,MAAL,GAAc,KAAd;AACH;;AAnCL","sourcesContent":["import Phaser from 'phaser';\r\nexport default class CoolDown extends Phaser.Physics.Arcade.Sprite\r\n    {\r\n\r\n        constructor (scene,x,y,texture,coolDownMS)\r\n        {\r\n            super(scene,x,y,texture);\r\n            \r\n            //Adds sprite to screen\r\n            scene.add.existing(this);\r\n            this.setScale(.5);\r\n            this.active = false;\r\n            //Duration of cooldown\r\n            this.coolDownMS = coolDownMS;\r\n            this.x = x;\r\n            this.y = y;\r\n            this.scene = scene;\r\n            \r\n            \r\n        }\r\n        startCoolDown(){\r\n            this.active = true;\r\n            //Change opacity\r\n            this.setAlpha(.5);\r\n            console.log('scene is: ' + this.scene);\r\n            if(this.scene){\r\n                let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\r\n            }\r\n            //let timedEvent = this.scene.time.delayedCall(this.coolDownMS, this.onEvent, [], this);\r\n        }\r\n        isActive()\r\n        {\r\n            return this.active;\r\n        }\r\n        onEvent(){\r\n            this.setAlpha(1);\r\n            this.active = false;\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}