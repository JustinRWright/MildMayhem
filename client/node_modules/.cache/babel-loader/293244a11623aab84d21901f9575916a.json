{"ast":null,"code":"/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n(function (exports, io, global) {\n  /**\n   * There is a way to hide the loading indicator in Firefox. If you create and\n   * remove a iframe it will stop showing the current loading indicator.\n   * Unfortunately we can't feature detect that and UA sniffing is evil.\n   *\n   * @api private\n   */\n  var indicator = global.document && \"MozAppearance\" in global.document.documentElement.style;\n  /**\n   * Expose constructor.\n   */\n\n  exports['jsonp-polling'] = JSONPPolling;\n  /**\n   * The JSONP transport creates an persistent connection by dynamically\n   * inserting a script tag in the page. This script tag will receive the\n   * information of the Socket.IO server. When new information is received\n   * it creates a new script tag for the new data stream.\n   *\n   * @constructor\n   * @extends {io.Transport.xhr-polling}\n   * @api public\n   */\n\n  function JSONPPolling(socket) {\n    io.Transport['xhr-polling'].apply(this, arguments);\n    this.index = io.j.length;\n    var self = this;\n    io.j.push(function (msg) {\n      self._(msg);\n    });\n  }\n\n  ;\n  /**\n   * Inherits from XHR polling transport.\n   */\n\n  io.util.inherit(JSONPPolling, io.Transport['xhr-polling']);\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  JSONPPolling.prototype.name = 'jsonp-polling';\n  /**\n   * Posts a encoded message to the Socket.IO server using an iframe.\n   * The iframe is used because script tags can create POST based requests.\n   * The iframe is positioned outside of the view so the user does not\n   * notice it's existence.\n   *\n   * @param {String} data A encoded message.\n   * @api private\n   */\n\n  JSONPPolling.prototype.post = function (data) {\n    var self = this,\n        query = io.util.query(this.socket.options.query, 't=' + +new Date() + '&i=' + this.index);\n\n    if (!this.form) {\n      var form = document.createElement('form'),\n          area = document.createElement('textarea'),\n          id = this.iframeId = 'socketio_iframe_' + this.index,\n          iframe;\n      form.className = 'socketio';\n      form.style.position = 'absolute';\n      form.style.top = '0px';\n      form.style.left = '0px';\n      form.style.display = 'none';\n      form.target = id;\n      form.method = 'POST';\n      form.setAttribute('accept-charset', 'utf-8');\n      area.name = 'd';\n      form.appendChild(area);\n      document.body.appendChild(form);\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.prepareUrl() + query;\n\n    function complete() {\n      initIframe();\n      self.socket.setBuffer(false);\n    }\n\n    ;\n\n    function initIframe() {\n      if (self.iframe) {\n        self.form.removeChild(self.iframe);\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        iframe = document.createElement('<iframe name=\"' + self.iframeId + '\">');\n      } catch (e) {\n        iframe = document.createElement('iframe');\n        iframe.name = self.iframeId;\n      }\n\n      iframe.id = self.iframeId;\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    ;\n    initIframe(); // we temporarily stringify until we figure out how to prevent\n    // browsers from turning `\\n` into `\\r\\n` in form inputs\n\n    this.area.value = io.JSON.stringify(data);\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      iframe.onreadystatechange = function () {\n        if (self.iframe.readyState == 'complete') {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n\n    this.socket.setBuffer(true);\n  };\n  /**\n   * Creates a new JSONP poll that can be used to listen\n   * for messages from the Socket.IO server.\n   *\n   * @api private\n   */\n\n\n  JSONPPolling.prototype.get = function () {\n    var self = this,\n        script = document.createElement('script'),\n        query = io.util.query(this.socket.options.query, 't=' + +new Date() + '&i=' + this.index);\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.prepareUrl() + query;\n\n    script.onerror = function () {\n      self.onClose();\n    };\n\n    var insertAt = document.getElementsByTagName('script')[0];\n    insertAt.parentNode.insertBefore(script, insertAt);\n    this.script = script;\n\n    if (indicator) {\n      setTimeout(function () {\n        var iframe = document.createElement('iframe');\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  };\n  /**\n   * Callback function for the incoming message stream from the Socket.IO server.\n   *\n   * @param {String} data The message\n   * @api private\n   */\n\n\n  JSONPPolling.prototype._ = function (msg) {\n    this.onData(msg);\n\n    if (this.isOpen) {\n      this.get();\n    }\n\n    return this;\n  };\n  /**\n   * The indicator hack only works after onload\n   *\n   * @param {Socket} socket The socket instance that needs a transport\n   * @param {Function} fn The callback\n   * @api private\n   */\n\n\n  JSONPPolling.prototype.ready = function (socket, fn) {\n    var self = this;\n    if (!indicator) return fn.call(this);\n    io.util.load(function () {\n      fn.call(self);\n    });\n  };\n  /**\n   * Checks if browser supports this transport.\n   *\n   * @return {Boolean}\n   * @api public\n   */\n\n\n  JSONPPolling.check = function () {\n    return 'document' in global;\n  };\n  /**\n   * Check if cross domain requests are supported\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n\n  JSONPPolling.xdomainCheck = function () {\n    return true;\n  };\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n\n  io.transports.push('jsonp-polling');\n})('undefined' != typeof io ? io.Transport : module.exports, 'undefined' != typeof io ? io : module.parent.exports, this);","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/socket.io-proxy/node_modules/socket.io-client/lib/transports/jsonp-polling.js"],"names":["exports","io","global","indicator","document","documentElement","style","JSONPPolling","socket","Transport","apply","arguments","index","j","length","self","push","msg","_","util","inherit","prototype","name","post","data","query","options","Date","form","createElement","area","id","iframeId","iframe","className","position","top","left","display","target","method","setAttribute","appendChild","body","action","prepareUrl","complete","initIframe","setBuffer","removeChild","e","value","JSON","stringify","submit","attachEvent","onreadystatechange","readyState","onload","get","script","parentNode","async","src","onerror","onClose","insertAt","getElementsByTagName","insertBefore","setTimeout","onData","isOpen","ready","fn","call","load","check","xdomainCheck","transports","module","parent"],"mappings":"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","sourcesContent":["\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io, global) {\n  /**\n   * There is a way to hide the loading indicator in Firefox. If you create and\n   * remove a iframe it will stop showing the current loading indicator.\n   * Unfortunately we can't feature detect that and UA sniffing is evil.\n   *\n   * @api private\n   */\n\n  var indicator = global.document && \"MozAppearance\" in\n    global.document.documentElement.style;\n\n  /**\n   * Expose constructor.\n   */\n\n  exports['jsonp-polling'] = JSONPPolling;\n\n  /**\n   * The JSONP transport creates an persistent connection by dynamically\n   * inserting a script tag in the page. This script tag will receive the\n   * information of the Socket.IO server. When new information is received\n   * it creates a new script tag for the new data stream.\n   *\n   * @constructor\n   * @extends {io.Transport.xhr-polling}\n   * @api public\n   */\n\n  function JSONPPolling (socket) {\n    io.Transport['xhr-polling'].apply(this, arguments);\n\n    this.index = io.j.length;\n\n    var self = this;\n\n    io.j.push(function (msg) {\n      self._(msg);\n    });\n  };\n\n  /**\n   * Inherits from XHR polling transport.\n   */\n\n  io.util.inherit(JSONPPolling, io.Transport['xhr-polling']);\n\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  JSONPPolling.prototype.name = 'jsonp-polling';\n\n  /**\n   * Posts a encoded message to the Socket.IO server using an iframe.\n   * The iframe is used because script tags can create POST based requests.\n   * The iframe is positioned outside of the view so the user does not\n   * notice it's existence.\n   *\n   * @param {String} data A encoded message.\n   * @api private\n   */\n\n  JSONPPolling.prototype.post = function (data) {\n    var self = this\n      , query = io.util.query(\n             this.socket.options.query\n          , 't='+ (+new Date) + '&i=' + this.index\n        );\n\n    if (!this.form) {\n      var form = document.createElement('form')\n        , area = document.createElement('textarea')\n        , id = this.iframeId = 'socketio_iframe_' + this.index\n        , iframe;\n\n      form.className = 'socketio';\n      form.style.position = 'absolute';\n      form.style.top = '0px';\n      form.style.left = '0px';\n      form.style.display = 'none';\n      form.target = id;\n      form.method = 'POST';\n      form.setAttribute('accept-charset', 'utf-8');\n      area.name = 'd';\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.prepareUrl() + query;\n\n    function complete () {\n      initIframe();\n      self.socket.setBuffer(false);\n    };\n\n    function initIframe () {\n      if (self.iframe) {\n        self.form.removeChild(self.iframe);\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        iframe = document.createElement('<iframe name=\"'+ self.iframeId +'\">');\n      } catch (e) {\n        iframe = document.createElement('iframe');\n        iframe.name = self.iframeId;\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    };\n\n    initIframe();\n\n    // we temporarily stringify until we figure out how to prevent\n    // browsers from turning `\\n` into `\\r\\n` in form inputs\n    this.area.value = io.JSON.stringify(data);\n\n    try {\n      this.form.submit();\n    } catch(e) {}\n\n    if (this.iframe.attachEvent) {\n      iframe.onreadystatechange = function () {\n        if (self.iframe.readyState == 'complete') {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n\n    this.socket.setBuffer(true);\n  };\n\n  /**\n   * Creates a new JSONP poll that can be used to listen\n   * for messages from the Socket.IO server.\n   *\n   * @api private\n   */\n\n  JSONPPolling.prototype.get = function () {\n    var self = this\n      , script = document.createElement('script')\n      , query = io.util.query(\n             this.socket.options.query\n          , 't='+ (+new Date) + '&i=' + this.index\n        );\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.prepareUrl() + query;\n    script.onerror = function () {\n      self.onClose();\n    };\n\n    var insertAt = document.getElementsByTagName('script')[0];\n    insertAt.parentNode.insertBefore(script, insertAt);\n    this.script = script;\n\n    if (indicator) {\n      setTimeout(function () {\n        var iframe = document.createElement('iframe');\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  };\n\n  /**\n   * Callback function for the incoming message stream from the Socket.IO server.\n   *\n   * @param {String} data The message\n   * @api private\n   */\n\n  JSONPPolling.prototype._ = function (msg) {\n    this.onData(msg);\n    if (this.isOpen) {\n      this.get();\n    }\n    return this;\n  };\n\n  /**\n   * The indicator hack only works after onload\n   *\n   * @param {Socket} socket The socket instance that needs a transport\n   * @param {Function} fn The callback\n   * @api private\n   */\n\n  JSONPPolling.prototype.ready = function (socket, fn) {\n    var self = this;\n    if (!indicator) return fn.call(this);\n\n    io.util.load(function () {\n      fn.call(self);\n    });\n  };\n\n  /**\n   * Checks if browser supports this transport.\n   *\n   * @return {Boolean}\n   * @api public\n   */\n\n  JSONPPolling.check = function () {\n    return 'document' in global;\n  };\n\n  /**\n   * Check if cross domain requests are supported\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  JSONPPolling.xdomainCheck = function () {\n    return true;\n  };\n\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n  io.transports.push('jsonp-polling');\n\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n  , this\n);\n"]},"metadata":{},"sourceType":"script"}