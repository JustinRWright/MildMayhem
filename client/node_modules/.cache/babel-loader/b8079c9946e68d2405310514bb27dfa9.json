{"ast":null,"code":"/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n(function (exports, io) {\n  /**\n   * Expose constructor.\n   */\n  exports.EventEmitter = EventEmitter;\n  /**\n   * Event emitter constructor.\n   *\n   * @api public.\n   */\n\n  function EventEmitter() {}\n\n  ;\n  /**\n   * Adds a listener\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.on = function (name, fn) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = fn;\n    } else if (io.util.isArray(this.$events[name])) {\n      this.$events[name].push(fn);\n    } else {\n      this.$events[name] = [this.$events[name], fn];\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n  /**\n   * Adds a volatile listener.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.once = function (name, fn) {\n    var self = this;\n\n    function on() {\n      self.removeListener(name, on);\n      fn.apply(this, arguments);\n    }\n\n    ;\n    on.listener = fn;\n    this.on(name, on);\n    return this;\n  };\n  /**\n   * Removes a listener.\n   *\n   * @api public\n   */\n\n\n  EventEmitter.prototype.removeListener = function (name, fn) {\n    if (this.$events && this.$events[name]) {\n      var list = this.$events[name];\n\n      if (io.util.isArray(list)) {\n        var pos = -1;\n\n        for (var i = 0, l = list.length; i < l; i++) {\n          if (list[i] === fn || list[i].listener && list[i].listener === fn) {\n            pos = i;\n            break;\n          }\n        }\n\n        if (pos < 0) {\n          return this;\n        }\n\n        list.splice(pos, 1);\n\n        if (!list.length) {\n          delete this.$events[name];\n        }\n      } else if (list === fn || list.listener && list.listener === fn) {\n        delete this.$events[name];\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Removes all listeners for an event.\n   *\n   * @api public\n   */\n\n\n  EventEmitter.prototype.removeAllListeners = function (name) {\n    if (name === undefined) {\n      this.$events = {};\n      return this;\n    }\n\n    if (this.$events && this.$events[name]) {\n      this.$events[name] = null;\n    }\n\n    return this;\n  };\n  /**\n   * Gets all listeners for a certain event.\n   *\n   * @api publci\n   */\n\n\n  EventEmitter.prototype.listeners = function (name) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = [];\n    }\n\n    if (!io.util.isArray(this.$events[name])) {\n      this.$events[name] = [this.$events[name]];\n    }\n\n    return this.$events[name];\n  };\n  /**\n   * Emits an event.\n   *\n   * @api public\n   */\n\n\n  EventEmitter.prototype.emit = function (name) {\n    if (!this.$events) {\n      return false;\n    }\n\n    var handler = this.$events[name];\n\n    if (!handler) {\n      return false;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    if ('function' == typeof handler) {\n      handler.apply(this, args);\n    } else if (io.util.isArray(handler)) {\n      var listeners = handler.slice();\n\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i].apply(this, args);\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n})('undefined' != typeof io ? io : module.exports, 'undefined' != typeof io ? io : module.parent.exports);","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/socket.io-proxy/node_modules/socket.io-client/lib/events.js"],"names":["exports","io","EventEmitter","prototype","on","name","fn","$events","util","isArray","push","addListener","once","self","removeListener","apply","arguments","listener","list","pos","i","l","length","splice","removeAllListeners","undefined","listeners","emit","handler","args","Array","slice","call","module","parent"],"mappings":"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","sourcesContent":["/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.EventEmitter = EventEmitter;\n\n  /**\n   * Event emitter constructor.\n   *\n   * @api public.\n   */\n\n  function EventEmitter () {};\n\n  /**\n   * Adds a listener\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.on = function (name, fn) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = fn;\n    } else if (io.util.isArray(this.$events[name])) {\n      this.$events[name].push(fn);\n    } else {\n      this.$events[name] = [this.$events[name], fn];\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  /**\n   * Adds a volatile listener.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.once = function (name, fn) {\n    var self = this;\n\n    function on () {\n      self.removeListener(name, on);\n      fn.apply(this, arguments);\n    };\n\n    on.listener = fn;\n    this.on(name, on);\n\n    return this;\n  };\n\n  /**\n   * Removes a listener.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.removeListener = function (name, fn) {\n    if (this.$events && this.$events[name]) {\n      var list = this.$events[name];\n\n      if (io.util.isArray(list)) {\n        var pos = -1;\n\n        for (var i = 0, l = list.length; i < l; i++) {\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\n            pos = i;\n            break;\n          }\n        }\n\n        if (pos < 0) {\n          return this;\n        }\n\n        list.splice(pos, 1);\n\n        if (!list.length) {\n          delete this.$events[name];\n        }\n      } else if (list === fn || (list.listener && list.listener === fn)) {\n        delete this.$events[name];\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Removes all listeners for an event.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.removeAllListeners = function (name) {\n    if (name === undefined) {\n      this.$events = {};\n      return this;\n    }\n\n    if (this.$events && this.$events[name]) {\n      this.$events[name] = null;\n    }\n\n    return this;\n  };\n\n  /**\n   * Gets all listeners for a certain event.\n   *\n   * @api publci\n   */\n\n  EventEmitter.prototype.listeners = function (name) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = [];\n    }\n\n    if (!io.util.isArray(this.$events[name])) {\n      this.$events[name] = [this.$events[name]];\n    }\n\n    return this.$events[name];\n  };\n\n  /**\n   * Emits an event.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.emit = function (name) {\n    if (!this.$events) {\n      return false;\n    }\n\n    var handler = this.$events[name];\n\n    if (!handler) {\n      return false;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    if ('function' == typeof handler) {\n      handler.apply(this, args);\n    } else if (io.util.isArray(handler)) {\n      var listeners = handler.slice();\n\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i].apply(this, args);\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n})(\n    'undefined' != typeof io ? io : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n"]},"metadata":{},"sourceType":"script"}