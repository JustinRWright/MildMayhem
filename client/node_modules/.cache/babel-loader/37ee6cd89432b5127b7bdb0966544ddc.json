{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Human\\\\Documents\\\\MildMayhemFull\\\\mildmayhem\\\\client\\\\src\\\\pages\\\\GamePage.js\";\nimport React, { Component } from 'react';\nimport Phaser from 'phaser';\nimport { IonPhaser } from '@ion-phaser/react';\nimport LocalGameScene from '../phaser/scenes/LocalGameScene.js';\nimport OnlineGameScene from '../phaser/scenes/OnlineGameScene.js';\nimport { socket } from '../api';\n\nclass GamePage extends Component {\n  constructor(props) {\n    super(props);\n    let gameConfig = this.props.gameConfig;\n    let roomName = this.props.roomName; //console.log(\"gameConfig is: \" + gameConfig);\n    //let newScene = new Object();\n\n    console.log('gamePage constructor called');\n    let newScene = LocalGameScene;\n\n    if (gameConfig === 'createOnline') {\n      newScene = OnlineGameScene;\n    } else if (gameConfig == 'joinOnline') {\n      newScene = OnlineGameScene;\n    }\n\n    let controlConfig = this.props.controlConfig;\n    this.state = {\n      initialize: true,\n      //This is the Phaser game code\n      game: {\n        type: Phaser.AUTO,\n        width: 800,\n        height: 600,\n        physics: {\n          default: 'arcade',\n          arcade: {\n            debug: false,\n            gravity: {\n              y: 0\n            }\n          }\n        },\n        input: {\n          gamepad: true\n        },\n        scene: {\n          init: function () {\n            //Here we can pass in the Control Config and any other data the Phaser scene needs from React\n            this.controlConfig = controlConfig;\n            this.gameConfig = gameConfig;\n            this.roomName = roomName;\n            this.socket = socket;\n          },\n          preload: newScene.preload,\n          create: newScene.create,\n          update: newScene.update\n        }\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    console.log('componentUnmounted');\n  }\n\n  render() {\n    const {\n      initialize,\n      game\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 800,\n        minWidth: 800,\n        minHeight: 600,\n        maxHeight: 600,\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(IonPhaser, {\n        game: game,\n        initialize: initialize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GamePage;","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/src/pages/GamePage.js"],"names":["React","Component","Phaser","IonPhaser","LocalGameScene","OnlineGameScene","socket","GamePage","constructor","props","gameConfig","roomName","console","log","newScene","controlConfig","state","initialize","game","type","AUTO","width","height","physics","default","arcade","debug","gravity","y","input","gamepad","scene","init","preload","create","update","componentWillUnmount","render","maxWidth","minWidth","minHeight","maxHeight","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SAAQC,MAAR,QAAqB,QAArB;;AACA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,QAAIC,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,QAAIC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B,CAHgB,CAIhB;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,QAAIC,QAAQ,GAAGV,cAAf;;AACA,QAAIM,UAAU,KAAG,cAAjB,EAAgC;AAC9BI,MAAAA,QAAQ,GAAGT,eAAX;AACD,KAFD,MAGK,IAAIK,UAAU,IAAE,YAAhB,EAA6B;AAChCI,MAAAA,QAAQ,GAAGT,eAAX;AACD;;AACD,QAAIU,aAAa,GAAG,KAAKN,KAAL,CAAWM,aAA/B;AACA,SAAKC,KAAL,GAAa;AACbC,MAAAA,UAAU,EAAE,IADC;AAEb;AACAC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAEjB,MAAM,CAACkB,IADT;AAEJC,QAAAA,KAAK,EAAE,GAFH;AAGJC,QAAAA,MAAM,EAAE,GAHJ;AAIJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,QADF;AAEPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,KADD;AAENC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,CAAC,EAAE;AAAL;AAFH;AAFD,SAJL;AAWJC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ,SAXH;AAcJC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,YAAW;AACf;AACA,iBAAKjB,aAAL,GAAqBA,aAArB;AACA,iBAAKL,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACA,iBAAKL,MAAL,GAAcA,MAAd;AACD,WAPI;AAQL2B,UAAAA,OAAO,EAAEnB,QAAQ,CAACmB,OARb;AASLC,UAAAA,MAAM,EAAEpB,QAAQ,CAACoB,MATZ;AAULC,UAAAA,MAAM,EAAErB,QAAQ,CAACqB;AAVZ;AAdH;AAHO,KAAb;AAgCD;;AACDC,EAAAA,oBAAoB,GAAG;AACvBxB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;AAECwB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAuB,KAAKF,KAAlC;AACA,wBACE;AAAK,MAAA,KAAK,EAAE;AAACsB,QAAAA,QAAQ,EAAE,GAAX;AAAgBC,QAAAA,QAAQ,EAAC,GAAzB;AAA8BC,QAAAA,SAAS,EAAC,GAAxC;AAA6CC,QAAAA,SAAS,EAAC,GAAvD;AAA4DC,QAAAA,MAAM,EAAE;AAApE,OAAZ;AAAA,6BAEE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAExB,IAAjB;AAAuB,QAAA,UAAU,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA7D8B;;AAgEjC,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Phaser from 'phaser';\r\nimport { IonPhaser } from '@ion-phaser/react';\r\nimport LocalGameScene from '../phaser/scenes/LocalGameScene.js';\r\nimport OnlineGameScene from '../phaser/scenes/OnlineGameScene.js';\r\nimport {socket} from '../api';\r\nclass GamePage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    let gameConfig = this.props.gameConfig;\r\n    let roomName = this.props.roomName;\r\n    //console.log(\"gameConfig is: \" + gameConfig);\r\n    //let newScene = new Object();\r\n    console.log('gamePage constructor called');\r\n    let newScene = LocalGameScene;\r\n    if (gameConfig==='createOnline'){\r\n      newScene = OnlineGameScene;\r\n    }\r\n    else if (gameConfig=='joinOnline'){\r\n      newScene = OnlineGameScene;\r\n    }\r\n    let controlConfig = this.props.controlConfig;\r\n    this.state = {\r\n    initialize: true,\r\n    //This is the Phaser game code\r\n    game: {\r\n      type: Phaser.AUTO,\r\n      width: 800,\r\n      height: 600,\r\n      physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n          debug: false,\r\n          gravity: { y: 0 }\r\n        }\r\n      },\r\n      input: {\r\n        gamepad: true\r\n      },\r\n      scene: {\r\n        init: function() {\r\n          //Here we can pass in the Control Config and any other data the Phaser scene needs from React\r\n          this.controlConfig = controlConfig;\r\n          this.gameConfig = gameConfig;\r\n          this.roomName = roomName;\r\n          this.socket = socket;\r\n        },\r\n        preload: newScene.preload,\r\n        create: newScene.create,\r\n        update: newScene.update,\r\n      }\r\n      \r\n    }\r\n  }\r\n  }\r\n  componentWillUnmount() {\r\n  console.log('componentUnmounted');\r\n}\r\n  \r\n  render() {\r\n    const { initialize, game } = this.state\r\n    return (\r\n      <div style={{maxWidth: 800, minWidth:800, minHeight:600, maxHeight:600, margin: 'auto'}}>\r\n      {/*Take a look at: https://github.com/proyecto26/ion-phaser/tree/master/react in order to see how this is implemented*/}\r\n        <IonPhaser game={game} initialize={initialize} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}