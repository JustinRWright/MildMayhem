{"ast":null,"code":"/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n(function (exports, global) {\n  /**\n   * IO namespace.\n   *\n   * @namespace\n   */\n  var io = exports;\n  /**\n   * Socket.IO version\n   *\n   * @api public\n   */\n\n  io.version = '0.9.16';\n  /**\n   * Protocol implemented.\n   *\n   * @api public\n   */\n\n  io.protocol = 1;\n  /**\n   * Available transports, these will be populated with the available transports\n   *\n   * @api public\n   */\n\n  io.transports = [];\n  /**\n   * Keep track of jsonp callbacks.\n   *\n   * @api private\n   */\n\n  io.j = [];\n  /**\n   * Keep track of our io.Sockets\n   *\n   * @api private\n   */\n\n  io.sockets = {}; // if node\n\n  /**\n   * Expose constructors if in Node\n   */\n\n  if ('object' === typeof module && 'function' === typeof require) {\n    /**\n     * Expose utils\n     *\n     * @api private\n     */\n    io.util = require('./util').util;\n    /**\n     * Expose JSON.\n     *\n     * @api private\n     */\n\n    io.JSON = require('./json').JSON;\n    /**\n     * Expose parser.\n     *\n     * @api private\n     */\n\n    io.parser = require('./parser').parser;\n    /**\n     * Expose EventEmitter\n     *\n     * @api private\n     */\n\n    io.EventEmitter = require('./events').EventEmitter;\n    /**\n     * Expose SocketNamespace\n     *\n     * @api private\n     */\n\n    io.SocketNamespace = require('./namespace').SocketNamespace;\n    /**\n     * Expose Transport\n     *\n     * @api public\n     */\n\n    io.Transport = require('./transport').Transport;\n    /**\n     * Default enabled transports\n     *\n     * @api public\n     */\n\n    io.transports = ['websocket', 'xhr-polling'];\n    /**\n     * Expose all transports\n     *\n     * @api public\n     */\n\n    io.Transport.XHR = require('./transports/xhr').XHR;\n    io.transports.forEach(function (t) {\n      io.Transport[t] = require('./transports/' + t)[t];\n    });\n    /**\n     * Expose Socket\n     *\n     * @api public\n     */\n\n    io.Socket = require('./socket').Socket;\n    /**\n     * Location of `dist/` directory.\n     *\n     * @api private\n     */\n\n    io.dist = __dirname + '/../dist';\n    /**\n     * Expose our build system which can generate\n     * socket.io files on the fly with different transports\n     *\n     * @api private\n     */\n\n    io.builder = require('../bin/builder');\n  } // end node\n\n  /**\n   * Manages connections to hosts.\n   *\n   * @param {String} uri\n   * @Param {Boolean} force creation of new socket (defaults to false)\n   * @api public\n   */\n\n\n  io.connect = function (host, details) {\n    var uri = io.util.parseUri(host),\n        uuri,\n        socket;\n\n    if (global && global.location) {\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\n      uri.host = uri.host || (global.document ? global.document.domain : global.location.hostname);\n      uri.port = uri.port || global.location.port;\n    }\n\n    uuri = io.util.uniqueUri(uri);\n    var options = {\n      host: uri.host,\n      secure: 'https' == uri.protocol,\n      port: uri.port || ('https' == uri.protocol ? 443 : 80),\n      query: uri.query || ''\n    };\n    io.util.merge(options, details);\n\n    if (options['force new connection'] || !io.sockets[uuri]) {\n      socket = new io.Socket(options);\n    }\n\n    if (!options['force new connection'] && socket) {\n      io.sockets[uuri] = socket;\n    }\n\n    socket = socket || io.sockets[uuri]; // if path is different from '' or /\n\n    return socket.of(uri.path.length > 1 ? uri.path : '');\n  };\n})('object' === typeof module ? module.exports : this.io = {}, this);","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/socket.io-proxy/node_modules/socket.io-client/lib/io.js"],"names":["exports","global","io","version","protocol","transports","j","sockets","module","require","util","JSON","parser","EventEmitter","SocketNamespace","Transport","XHR","forEach","t","Socket","dist","__dirname","builder","connect","host","details","uri","parseUri","uuri","socket","location","slice","document","domain","hostname","port","uniqueUri","options","secure","query","merge","of","path","length"],"mappings":"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","sourcesContent":["\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, global) {\n\n  /**\n   * IO namespace.\n   *\n   * @namespace\n   */\n\n  var io = exports;\n\n  /**\n   * Socket.IO version\n   *\n   * @api public\n   */\n\n  io.version = '0.9.16';\n\n  /**\n   * Protocol implemented.\n   *\n   * @api public\n   */\n\n  io.protocol = 1;\n\n  /**\n   * Available transports, these will be populated with the available transports\n   *\n   * @api public\n   */\n\n  io.transports = [];\n\n  /**\n   * Keep track of jsonp callbacks.\n   *\n   * @api private\n   */\n\n  io.j = [];\n\n  /**\n   * Keep track of our io.Sockets\n   *\n   * @api private\n   */\n  io.sockets = {};\n\n  // if node\n\n  /**\n   * Expose constructors if in Node\n   */\n\n  if ('object' === typeof module && 'function' === typeof require) {\n\n    /**\n     * Expose utils\n     *\n     * @api private\n     */\n\n    io.util = require('./util').util;\n\n    /**\n     * Expose JSON.\n     *\n     * @api private\n     */\n\n    io.JSON = require('./json').JSON;\n\n    /**\n     * Expose parser.\n     *\n     * @api private\n     */\n\n    io.parser = require('./parser').parser;\n\n    /**\n     * Expose EventEmitter\n     *\n     * @api private\n     */\n\n    io.EventEmitter = require('./events').EventEmitter;\n\n    /**\n     * Expose SocketNamespace\n     *\n     * @api private\n     */\n\n     io.SocketNamespace = require('./namespace').SocketNamespace;\n\n    /**\n     * Expose Transport\n     *\n     * @api public\n     */\n\n    io.Transport = require('./transport').Transport;\n\n    /**\n     * Default enabled transports\n     *\n     * @api public\n     */\n\n    io.transports = ['websocket', 'xhr-polling'];\n\n    /**\n     * Expose all transports\n     *\n     * @api public\n     */\n\n    io.Transport.XHR = require('./transports/xhr').XHR;\n\n    io.transports.forEach(function (t) {\n      io.Transport[t] = require('./transports/' + t)[t];\n    });\n\n    /**\n     * Expose Socket\n     *\n     * @api public\n     */\n\n    io.Socket = require('./socket').Socket;\n\n    /**\n     * Location of `dist/` directory.\n     *\n     * @api private\n     */\n\n    io.dist = __dirname + '/../dist';\n\n    /**\n     * Expose our build system which can generate\n     * socket.io files on the fly with different transports\n     *\n     * @api private\n     */\n\n    io.builder = require('../bin/builder');\n\n  }\n  // end node\n\n  /**\n   * Manages connections to hosts.\n   *\n   * @param {String} uri\n   * @Param {Boolean} force creation of new socket (defaults to false)\n   * @api public\n   */\n\n  io.connect = function (host, details) {\n    var uri = io.util.parseUri(host)\n      , uuri\n      , socket;\n\n    if (global && global.location) {\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\n      uri.host = uri.host || (global.document\n        ? global.document.domain : global.location.hostname);\n      uri.port = uri.port || global.location.port;\n    }\n\n    uuri = io.util.uniqueUri(uri);\n\n    var options = {\n        host: uri.host\n      , secure: 'https' == uri.protocol\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\n      , query: uri.query || ''\n    };\n\n    io.util.merge(options, details);\n\n    if (options['force new connection'] || !io.sockets[uuri]) {\n      socket = new io.Socket(options);\n    }\n\n    if (!options['force new connection'] && socket) {\n      io.sockets[uuri] = socket;\n    }\n\n    socket = socket || io.sockets[uuri];\n\n    // if path is different from '' or /\n    return socket.of(uri.path.length > 1 ? uri.path : '');\n  };\n\n})('object' === typeof module ? module.exports : (this.io = {}), this);\n"]},"metadata":{},"sourceType":"script"}