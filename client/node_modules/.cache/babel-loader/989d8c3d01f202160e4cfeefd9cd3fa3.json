{"ast":null,"code":"import _classCallCheck from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import Phaser from'phaser';var HealthBar=/*#__PURE__*/function(_Phaser$GameObjects$S){_inherits(HealthBar,_Phaser$GameObjects$S);var _super=_createSuper(HealthBar);//This is from the Phaser3 healthbar example,\n//https://phaser.io/examples/v3/view/game-objects/graphics/health-bars-demo\n// with a few tweaks it seems to work great for this game\nfunction HealthBar(config){var _this;_classCallCheck(this,HealthBar);_this=_super.call(this,config.scene,config.x,config.y);config.scene.add.existing(_assertThisInitialized(_this));var scene=config.scene;var x=config.x;var y=config.y;_this.bar=new Phaser.GameObjects.Graphics(scene);_this.x=x;_this.y=y;_this.value=100;//What is this.p?\n_this.p=76/100;_this.draw();scene.add.existing(_this.bar);return _this;}_createClass(HealthBar,[{key:\"decrease\",value:function decrease(amount){this.value-=amount*10;if(this.value<0){this.value=0;}this.draw();return this.value===0;}},{key:\"draw\",value:function draw(){this.bar.clear();//  BG\nthis.bar.fillStyle(0x000000);this.bar.fillRect(this.x,this.y,800,16);//  Health\nthis.bar.fillStyle(0xffffff);this.bar.fillRect(this.x+2,this.y+2,792,12);if(this.value<30){this.bar.fillStyle(0xff0000);}else{this.bar.fillStyle(0x00ff00);}var d=Math.floor(this.p*this.value);this.bar.fillRect(this.x+2,this.y+2,d*10,12);}}]);return HealthBar;}(Phaser.GameObjects.Sprite);export{HealthBar as default};","map":{"version":3,"sources":["C:/Users/Human/Documents/MildMayhemFull/mildmayhem/client/src/phaser/sprites/HealthBar.js"],"names":["Phaser","HealthBar","config","scene","x","y","add","existing","bar","GameObjects","Graphics","value","p","draw","amount","clear","fillStyle","fillRect","d","Math","floor","Sprite"],"mappings":"4rBAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,C,GACqBC,CAAAA,S,4HAEjB;AACA;AACA;AACA,mBAAaC,MAAb,CACA,2CACI,uBAAMA,MAAM,CAACC,KAAb,CAAmBD,MAAM,CAACE,CAA1B,CAA4BF,MAAM,CAACG,CAAnC,EACAH,MAAM,CAACC,KAAP,CAAaG,GAAb,CAAiBC,QAAjB,gCACA,GAAIJ,CAAAA,KAAK,CAAGD,MAAM,CAACC,KAAnB,CACA,GAAIC,CAAAA,CAAC,CAAGF,MAAM,CAACE,CAAf,CACA,GAAIC,CAAAA,CAAC,CAAGH,MAAM,CAACG,CAAf,CACA,MAAKG,GAAL,CAAW,GAAIR,CAAAA,MAAM,CAACS,WAAP,CAAmBC,QAAvB,CAAgCP,KAAhC,CAAX,CAEA,MAAKC,CAAL,CAASA,CAAT,CACA,MAAKC,CAAL,CAASA,CAAT,CACA,MAAKM,KAAL,CAAa,GAAb,CACA;AACA,MAAKC,CAAL,CAAS,GAAK,GAAd,CAEA,MAAKC,IAAL,GAEAV,KAAK,CAACG,GAAN,CAAUC,QAAV,CAAmB,MAAKC,GAAxB,EAhBJ,aAiBC,C,gEAESM,M,CACV,CACI,KAAKH,KAAL,EAAcG,MAAM,CAAC,EAArB,CAEA,GAAI,KAAKH,KAAL,CAAa,CAAjB,CACA,CACI,KAAKA,KAAL,CAAa,CAAb,CACH,CAED,KAAKE,IAAL,GAEA,MAAQ,MAAKF,KAAL,GAAe,CAAvB,CACH,C,mCAGD,CACI,KAAKH,GAAL,CAASO,KAAT,GAEA;AACA,KAAKP,GAAL,CAASQ,SAAT,CAAmB,QAAnB,EACA,KAAKR,GAAL,CAASS,QAAT,CAAkB,KAAKb,CAAvB,CAA0B,KAAKC,CAA/B,CAAkC,GAAlC,CAAuC,EAAvC,EAEA;AAEA,KAAKG,GAAL,CAASQ,SAAT,CAAmB,QAAnB,EACA,KAAKR,GAAL,CAASS,QAAT,CAAkB,KAAKb,CAAL,CAAS,CAA3B,CAA8B,KAAKC,CAAL,CAAS,CAAvC,CAA0C,GAA1C,CAA+C,EAA/C,EAEA,GAAI,KAAKM,KAAL,CAAa,EAAjB,CACA,CACI,KAAKH,GAAL,CAASQ,SAAT,CAAmB,QAAnB,EACH,CAHD,IAKA,CACI,KAAKR,GAAL,CAASQ,SAAT,CAAmB,QAAnB,EACH,CAED,GAAIE,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAW,KAAKR,CAAL,CAAS,KAAKD,KAAzB,CAAR,CAEA,KAAKH,GAAL,CAASS,QAAT,CAAkB,KAAKb,CAAL,CAAS,CAA3B,CAA8B,KAAKC,CAAL,CAAS,CAAvC,CAA0Ca,CAAC,CAAC,EAA5C,CAAgD,EAAhD,EACH,C,uBAhEkClB,MAAM,CAACS,WAAP,CAAmBY,M,SAArCpB,S","sourcesContent":["import Phaser from 'phaser';\r\nexport default class HealthBar extends Phaser.GameObjects.Sprite\r\n {\r\n    //This is from the Phaser3 healthbar example,\r\n    //https://phaser.io/examples/v3/view/game-objects/graphics/health-bars-demo\r\n    // with a few tweaks it seems to work great for this game\r\n    constructor (config)\r\n    {\r\n        super(config.scene,config.x,config.y);\r\n        config.scene.add.existing(this);\r\n        var scene = config.scene;\r\n        var x = config.x;\r\n        var y = config.y;\r\n        this.bar = new Phaser.GameObjects.Graphics(scene);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.value = 100;\r\n        //What is this.p?\r\n        this.p = 76 / 100;\r\n\r\n        this.draw();\r\n\r\n        scene.add.existing(this.bar);\r\n    }\r\n\r\n    decrease (amount)\r\n    {\r\n        this.value -= amount*10;\r\n\r\n        if (this.value < 0)\r\n        {\r\n            this.value = 0;\r\n        }\r\n\r\n        this.draw();\r\n\r\n        return (this.value === 0);\r\n    }\r\n\r\n    draw ()\r\n    {\r\n        this.bar.clear();\r\n\r\n        //  BG\r\n        this.bar.fillStyle(0x000000);\r\n        this.bar.fillRect(this.x, this.y, 800, 16);\r\n\r\n        //  Health\r\n\r\n        this.bar.fillStyle(0xffffff);\r\n        this.bar.fillRect(this.x + 2, this.y + 2, 792, 12);\r\n\r\n        if (this.value < 30)\r\n        {\r\n            this.bar.fillStyle(0xff0000);\r\n        }\r\n        else\r\n        {\r\n            this.bar.fillStyle(0x00ff00);\r\n        }\r\n\r\n        var d = Math.floor(this.p * this.value);\r\n\r\n        this.bar.fillRect(this.x + 2, this.y + 2, d*10, 12);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}